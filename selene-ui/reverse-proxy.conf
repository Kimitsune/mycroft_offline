upstream selene-ui-market {
    server selene-ui-market:80;
}

upstream selene-ui-account {
    server selene-ui-account:80;
}

upstream selene-ui-sso {
    server selene-ui-sso:80;
}

upstream devices {
    server devices:4000;
}

upstream sso {
    server sso:4000;
}

upstream market {
    server market:4000;
}

upstream account {
    server account:4000;
}

# Subdomain redirections
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    include snippets/self-signed.conf;
    include snippets/ssl-params.conf;
    server_name sso.*;

    include /etc/nginx/nginx-api-locations.conf;

    location / {
        proxy_pass http://selene-ui-sso;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_set_header HOST $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    include snippets/self-signed.conf;
    include snippets/ssl-params.conf;
    server_name market.*;

    include /etc/nginx/nginx-api-locations.conf;

    location / {
        proxy_pass http://selene-ui-market;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_set_header HOST $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    include snippets/self-signed.conf;
    include snippets/ssl-params.conf;
    server_name account.* home.*;

    include /etc/nginx/nginx-api-locations.conf;

    location / {
        proxy_pass http://selene-ui-account;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_set_header HOST $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

# API endpoint redirections
server {
    # SSL configuration
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    include snippets/self-signed.conf;
    include snippets/ssl-params.conf;

    server_name _;

    include /etc/nginx/nginx-api-locations.conf;
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 302 https://$server_name$request_uri;
}

